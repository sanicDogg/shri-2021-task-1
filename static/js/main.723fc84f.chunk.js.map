{"version":3,"sources":["helpers.js","components/slide__caption.js","components/podium.js","slides/leaders.js","components/doughnut-chart.js","components/slide-diagram__legend.js","slides/diagram.js","components/activity-chart.js","components/slide-activity__legend.js","slides/activity.js","components/slide-vote__users.js","slides/vote.js","components/slide-chart__users.js","components/slide-chart__diagram.js","slides/chart.js","index.js"],"names":["isOrientationPortrait","o","window","innerWidth","innerHeight","getScale","resolution","scale","switchFullScreenMode","document","fullscreenElement","exitFullscreen","then","root","requestFullscreen","catch","err","console","log","onTouchStart","e","target","classList","contains","touchStart","x","changedTouches","clientX","y","clientY","touchPosition","halfOfScreen","changeSlide","eCode","currSlide","allSlidesData","length","slideData","alias","data","renderTemplate","pathname","location","title","url","history","pushState","obj","Title","Url","alert","changeUrl","currTheme","SlideCaption","props","className","subtitle","Podium","users","emoji","selectedUserId","preparedUsers","Array","from","splice","forEach","user","i","id","map","index","getAllUsers","User","this","src","avatar","alt","name","valueText","React","Component","Grade","Leaders","onResize","setState","getResolutionObject","state","addEventListener","removeEventListener","DoughnutChart","arcGenerator","arc","cornerRadius","padAngle","outerRadius","size","categories","arcs","sum","reduce","item","radians","Math","PI","arcsArray","getArcObject","acc","push","getArcs","parseInt","colors","dark","grad1","grad2","grad3","grad4","light","themeColor","querySelector","totalText","differenceText","width","height","viewBox","gradientUnits","fr","cx","cy","r","offset","stopColor","transform","d","fill","iR","oR","sA","eA","innerRadius","startAngle","endAngle","SlideDiagramLegend","style","display","removeLetters","input","n","join","Diagram","ActivityChart","oPortrait","orientation","finalData","dayOfWeek","undefined","arr","nArray","points","j","value","hour","p","twoHours","zipHours","a","bottom","reverse","toFixed","zIndex","getActivityChartElements","HeatMapPoint","SlideActivityLegend","textsArray","currText","Activity","onOrientationChange","currentTarget","type","screen","SlideVoteUsers","nextPageUserId","prevPageUserId","isPortrait","topBtnActive","bottomBtnActive","useState","offsetIndex","usersCount","slice","tempUser","prepareUsers","getUsers","action","JSON","stringify","params","onClick","handleClick","Vote","SlideChartUsers","SlideChartDiagram","values","activeValueIndex","valuesCount","active","preparedValues","max","prepareData","isWide","toString","isActive","Chart","fetch","response","json","fetchSlideData","getUrlParameters","slideNumber","theme","setTheme","body","code","slideComponent","ReactDOM","render","ReactDOMServer","renderToStaticMarkup","getElementById","searchParams","URL","href","get","remove","add"],"mappings":"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","file":"static/js/main.723fc84f.chunk.js","sourcesContent":["export function isOrientationPortrait(o) {\r\n    if (window.innerWidth > 1000)\r\n        return window.innerWidth > window.innerHeight ? 0 : 1;\r\n    if (o === \"landscape-primary\" || o === \"landscape-secondary\") return 0;\r\n    else return 1;\r\n}\r\n\r\nexport function getScale(resolution) {\r\n    let { innerWidth, innerHeight } = resolution;\r\n    let scale = 1;\r\n    if (innerWidth > 1000) scale = 2;\r\n    if (innerWidth > 1500) scale = 3;\r\n    if (innerWidth > 2250) scale = 4;\r\n    if (innerWidth === 768 && innerHeight === 1024) {\r\n        scale = 2;\r\n    }\r\n    return scale;\r\n}\r\n\r\nconst switchFullScreenMode = () => {\r\n    if (!document.fullscreenElement)\r\n        window.root.requestFullscreen()\r\n            .then()\r\n            .catch((err) => console.log(err))\r\n    else\r\n        document.exitFullscreen()\r\n            .then()\r\n}\r\n\r\nconst onTouchStart = (e) => {\r\n    // Если тапнули по заголовку, переходим в полноэкранный режим и обратно\r\n    if (e.target.classList.contains(\"slide__title\")) {\r\n        switchFullScreenMode()\r\n        return\r\n    }\r\n\r\n    // Если тапнули по пользователю в слайде vote, не переключаем слайд\r\n    if (e.target.classList.contains(\"vote__user\") ||\r\n        e.target.classList.contains(\"vote__user-name\") ||\r\n        e.target.classList.contains(\"vote__user-avatar\") ||\r\n        e.target.classList.contains(\"vote__user-emoji\"))\r\n        return;\r\n    if (e.target.classList.contains(\"vote__bottom-btn_active\") ||\r\n        e.target.classList.contains(\"vote__top-btn_active\"))\r\n        return;\r\n\r\n    let touchStart = { x: e.changedTouches[0].clientX, y: e.changedTouches[0].clientY };\r\n    let touchPosition = { x: touchStart.x, y: touchStart.y };\r\n    let halfOfScreen = window.innerWidth / 2;\r\n    if (touchPosition.x > halfOfScreen)\r\n        changeSlide(\"ArrowRight\");\r\n    if (touchPosition.x < halfOfScreen)\r\n        changeSlide(\"ArrowLeft\");\r\n}\r\n\r\nconst changeSlide = (eCode) => {\r\n    window.currSlide += eCode === \"ArrowRight\" ? 1 : -1;\r\n    if (window.currSlide < 1) window.currSlide = window.allSlidesData.length;\r\n    if (window.currSlide > window.allSlidesData.length)\r\n        window.currSlide = 1\r\n    let slideData = window.allSlidesData[window.currSlide - 1];\r\n    const { alias, data } = slideData;\r\n    window.renderTemplate(alias, data);\r\n    let { pathname } = document.location;\r\n    changeUrl(document.title,\r\n        `${pathname || \"/\"}?slide=${window.currSlide}&theme=${window.currTheme}`);\r\n}\r\n\r\nexport function addEventListeners() {\r\n    document.body.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"KeyF\")\r\n            switchFullScreenMode();\r\n\r\n        if (e.code === \"ArrowRight\" || e.code === \"ArrowLeft\")\r\n            changeSlide(e.code);\r\n    });\r\n\r\n    document.body.addEventListener(\"touchstart\", onTouchStart);\r\n}\r\n\r\nfunction changeUrl(title, url) {\r\n    if (typeof (window.history.pushState) != \"undefined\") {\r\n        let obj = { Title: title, Url: url };\r\n        window.history.pushState(obj, obj.Title, obj.Url);\r\n    } else {\r\n        alert(\"Browser does not support HTML5.\");\r\n    }\r\n}","import React from \"react\";\r\nimport './slide__caption.css';\r\n\r\nexport default function SlideCaption(props) {\r\n    return (\r\n        <div className={\"slide__caption\"}>\r\n            <div className={\"slide__title\"}>{props.title}</div>\r\n            <div className={\"slide__subtitle\"}>{props.subtitle}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport './podium.css';\r\nimport { getScale } from \"../helpers\";\r\n\r\nlet selectedUserEmoji = \"👍\";\r\n\r\nexport default function Podium(props) {\r\n    let { users, emoji, selectedUserId } = props.data;\r\n    let { resolution } = props;\r\n    let scale = getScale(resolution);\r\n\r\n    return (\r\n        <div className={\"podium\"}>\r\n            {getAllUsers(users)}\r\n        </div>\r\n    )\r\n\r\n    function getAllUsers(users) {\r\n        let preparedUsers = Array.from(users);\r\n        preparedUsers.splice(5);\r\n\r\n        // Помещаем выбранного пользователя на 5 место\r\n        users.forEach((user, i) => {\r\n            if (user.id === selectedUserId && i + 1 > 5) {\r\n                preparedUsers[4] = user;\r\n            }\r\n        });\r\n\r\n        return preparedUsers.map((user, i) => {\r\n            let e = i === 0 ? emoji : \"\";\r\n            if (user.id === selectedUserId && i !== 0) e = selectedUserEmoji;\r\n            return (\r\n                <div className={\"podium__leader\"} key={i+1}>\r\n                    <User data={user} index={i+1} scale={scale} emoji={e}/>\r\n                    <Grade index={i+1}/>\r\n                </div> )\r\n        });\r\n    }\r\n}\r\n\r\nclass User extends React.Component {\r\n    render() {\r\n        let className = \"podium__user\";\r\n        if (this.props.emoji === selectedUserEmoji)\r\n            className += \"_selected\";\r\n        return (\r\n            <div className={`${className} podium__user-${this.props.index}`}>\r\n                <span className={\"podium__leader-emoji\"}>{this.props.emoji}</span>\r\n                <img className={\"podium__leader-avatar\"}\r\n                     src={`assets/images/${this.props.scale}x/${this.props.data.avatar}`}\r\n                     alt={this.props.data.name}/>\r\n                <div className={\"podium__leader-name\"}>{this.props.data.name}</div>\r\n                <div className={\"podium__leader-score\"}>{this.props.data.valueText}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Grade extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"podium__grade-\"+this.props.index}>\r\n                <div className={\"podium__text-\"+this.props.index}>{this.props.index}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport SlideCaption from \"../components/slide__caption\";\r\nimport Podium from \"../components/podium\";\r\n\r\nexport default class Leaders extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = this.getResolutionObject()\r\n    }\r\n\r\n    onResize = e => {\r\n        this.setState(this.getResolutionObject())\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.onResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.onResize);\r\n    }\r\n\r\n    getResolutionObject() {\r\n        return {\r\n            innerWidth: window.innerWidth,\r\n            innerHeight: window.innerHeight\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"slide slide-leaders\"}>\r\n                <SlideCaption title={this.props.data.title} subtitle={this.props.data.subtitle}/>\r\n                <Podium data={this.props.data} resolution={this.state}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport './doughnut-chart.css';\r\nimport { arc } from \"d3-shape\";\r\n\r\nexport default function DoughnutChart (props) {\r\n    const arcGenerator = arc().cornerRadius(6).padAngle(0.017); // 1 deg in radians\r\n    let outerRadius = 120;\r\n    let innerRadius = outerRadius * 0.7;\r\n    let size = 240;\r\n    let {categories} = props.data;\r\n    let preparedData = prepareData(categories);\r\n    let arcs = getArcs(preparedData);\r\n\r\n    let colors = {\r\n        dark: {\r\n            grad1: [\r\n                'rgba(255, 163, 0, 0.8)',\r\n                'rgba(91, 58, 0, 0.8)'\r\n            ],\r\n            grad2: [\r\n                'rgba(99, 63, 0, 0.5)',\r\n                'rgba(15, 9, 0, 0.5)'\r\n            ],\r\n            grad3: [\r\n                'rgba(155, 155, 155, 0.5)',\r\n                'rgba(56, 41, 0, 0.5)'\r\n            ],\r\n            grad4: [\r\n                'rgba(77, 77, 77, 0.5)',\r\n                'rgba(56, 41, 0, 0.5)'\r\n            ]\r\n        },\r\n        light: {\r\n            grad1: [\r\n                'rgba(255, 184, 0, 1)',\r\n                'rgba(255, 239, 153, 1)'\r\n            ],\r\n            grad2: [\r\n                'rgba(255, 184, 0, 0.7)',\r\n                'rgba(255, 239, 153, 0.5)'\r\n            ],\r\n            grad3: [\r\n                'rgba(166, 166, 166, 0.3)',\r\n                'rgba(203, 203, 203, 0.2)'\r\n            ],\r\n            grad4: [\r\n                'rgba(191, 191, 191, 0.8)',\r\n                'rgba(228, 228, 228, 0.6)'\r\n            ]\r\n        }\r\n    }\r\n\r\n    let themeColor = document.querySelector(\".theme_light\") ? colors.light : colors.dark;\r\n    let {totalText, differenceText} = props.data;\r\n\r\n    return (\r\n        <div className={\"doughnut-chart\"}>\r\n            <svg width={size} height={size} viewBox={`0 0 ${size} ${size}`} className={\"doughnut-chart__svg\"}>\r\n                <defs>\r\n                    <radialGradient gradientUnits=\"userSpaceOnUse\" fr=\"33%\" cx=\"0\" cy=\"0\" r=\"55%\" id=\"grad1\">\r\n                        <stop offset=\"0%\" stopColor={`${themeColor.grad1[0]}`}/>\r\n                        <stop offset=\"65%\" stopColor={`${themeColor.grad1[1]}`}/>\r\n                        <stop offset=\"70%\" stopColor={`${themeColor.grad1[1]}`}/>\r\n                        <stop offset=\"100%\" stopColor={`${themeColor.grad1[0]}`}/>\r\n                    </radialGradient>\r\n                    <radialGradient gradientUnits=\"userSpaceOnUse\" fr=\"33%\" cx=\"0\" cy=\"0\" r=\"55%\" id=\"grad2\">\r\n                        <stop offset=\"0%\" stopColor={`${themeColor.grad2[0]}`}/>\r\n                        <stop offset=\"65%\" stopColor={`${themeColor.grad2[1]}`}/>\r\n                        <stop offset=\"70%\" stopColor={`${themeColor.grad2[1]}`}/>\r\n                        <stop offset=\"100%\" stopColor={`${themeColor.grad2[0]}`}/>\r\n                    </radialGradient>\r\n                    <radialGradient gradientUnits=\"userSpaceOnUse\" fr=\"33%\" cx=\"0\" cy=\"0\" r=\"55%\" id=\"grad3\">\r\n                        <stop offset=\"0%\" stopColor={`${themeColor.grad3[0]}`}/>\r\n                        <stop offset=\"65%\" stopColor={`${themeColor.grad3[1]}`}/>\r\n                        <stop offset=\"70%\" stopColor={`${themeColor.grad3[1]}`}/>\r\n                        <stop offset=\"100%\" stopColor={`${themeColor.grad3[0]}`}/>\r\n                    </radialGradient>\r\n                    <radialGradient gradientUnits=\"userSpaceOnUse\" fr=\"33%\" cx=\"0\" cy=\"0\" r=\"55%\" id=\"grad4\">\r\n                        <stop offset=\"0%\" stopColor={`${themeColor.grad4[0]}`}/>\r\n                        <stop offset=\"65%\" stopColor={`${themeColor.grad4[1]}`}/>\r\n                        <stop offset=\"70%\" stopColor={`${themeColor.grad4[1]}`}/>\r\n                        <stop offset=\"100%\" stopColor={`${themeColor.grad4[0]}`}/>\r\n                    </radialGradient>\r\n                </defs>\r\n                <g transform={`translate(${outerRadius} ${outerRadius})`}>\r\n                    <path d={arcs[0]} fill=\"url(#grad1)\"/>\r\n                    <path d={arcs[1]} fill=\"url(#grad2)\"/>\r\n                    <path d={arcs[2]} fill=\"url(#grad3)\"/>\r\n                    <path d={arcs[3]} fill=\"url(#grad4)\"/>\r\n                </g>\r\n            </svg>\r\n            <div className={\"doughnut-chart__text\"}>\r\n                <div className={\"doughnut-chart__text-total\"}>{totalText}</div>\r\n                <div className={\"doughnut-chart__text-difference\"}>{differenceText}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    function getArcs(data) {\r\n        let sum = data.reduce((sum, item) => sum + item);\r\n        let radians = data.map(item => 2 * Math.PI * (item / sum));\r\n        let arcsArray = [\r\n            getArcObject(\r\n                innerRadius, outerRadius,\r\n                - Math.PI / 6, radians[0] - Math.PI / 6)\r\n        ];\r\n\r\n        radians.reduce((acc, item) => {\r\n            arcsArray.push(getArcObject(\r\n                innerRadius, outerRadius,\r\n                acc - Math.PI / 6, acc + item - Math.PI / 6));\r\n            return acc + item;\r\n        });\r\n\r\n        return arcsArray\r\n    }\r\n\r\n    function getArcObject(iR, oR, sA, eA) {\r\n        return arcGenerator({\r\n            innerRadius: iR,\r\n            outerRadius: oR,\r\n            startAngle: sA,\r\n            endAngle: eA,\r\n        });\r\n    }\r\n\r\n    function prepareData(data) {\r\n        return data.map(item => parseInt(item.valueText));\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './slide-diagram__legend.css';\r\n\r\nexport default function SlideDiagramLegend (props) {\r\n    let {data} = props;\r\n\r\n    return (\r\n            <div className={\"slide-diagram__legend\"}>\r\n                {getTexts()}\r\n            </div>\r\n    );\r\n\r\n    function getTexts() {\r\n        return data.map((item, i) => (\r\n                <div className={\"slide-diagram__text-content\"} key={i+1}>\r\n                    <div className={\"slide-diagram__group\"} style={{display: \"flex\"}}>\r\n                        <div className={`slide-diagram__dot slide-diagram__dot-${i+1}`} />\r\n                        <div className={\"slide-diagram__title\"}>{item.title}</div>\r\n                    </div>\r\n                    <div className={\"slide-diagram__group\"} style={{display: \"flex\"}}>\r\n                        <div className={\"slide-diagram__diff\"}>{removeLetters(item.differenceText)}</div>\r\n                        <div className={\"slide-diagram__value\"}>{removeLetters(item.valueText)}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\nfunction removeLetters(input) {\r\n    let n = [];\r\n    if  (input[0] === \"+\") n.push(\"+\");\r\n    n.push(parseInt(input));\r\n    return n.join(\"\");\r\n}","import React from \"react\";\r\nimport SlideCaption from \"../components/slide__caption\";\r\nimport DoughnutChart from \"../components/doughnut-chart\";\r\nimport SlideDiagramLegend from \"../components/slide-diagram__legend\";\r\nimport \"./diagram.css\";\r\n\r\nexport default class Diagram extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={\"slide slide-diagram\"}>\r\n                <SlideCaption title={this.props.data.title} subtitle={this.props.data.subtitle}/>\r\n                <div className={\"slide-diagram__content-wrapper\"}>\r\n                    <DoughnutChart data={this.props.data}/>\r\n                    <SlideDiagramLegend data={this.props.data.categories}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./activity-chart.css\";\r\nimport { isOrientationPortrait } from \"../helpers\";\r\n\r\nexport default function ActivityChart (props) {\r\n    let { data } = props;\r\n    let oPortrait = isOrientationPortrait(props.orientation);\r\n\r\n    let finalData = getFinalData();\r\n\r\n    return (\r\n        <div className={\"activity-chart\"}> { getActivityChartElements() } </div>\r\n    )\r\n\r\n    function getActivityChartElements() {\r\n        let bottom = oPortrait ? 4.45 : 3.5; // 4.45vmin for portrait, 3.5vmin for album\r\n        finalData.reverse();\r\n        return finalData.map((item, i, arr) => {\r\n            return (\r\n                <div style={{bottom: `${(bottom * i).toFixed(2)}vmin`, zIndex: arr.length - i}}\r\n                     className={getClassName(item.dayOfWeek)}\r\n                     key={i}>\r\n                    {item.points}\r\n                </div>\r\n            )\r\n        });\r\n        function getClassName(dayOfWeek) {\r\n            return oPortrait ?\r\n                \"activity-chart__day-of-week\" :\r\n                \"activity-chart__day-of-week activity-chart__\" + dayOfWeek\r\n        }\r\n    }\r\n\r\n    function getFinalData() {\r\n        return oPortrait ? p() : a();\r\n\r\n        function p() {\r\n            let d = [];\r\n\r\n            for (const dayOfWeek in data) {\r\n                let current = data[dayOfWeek];\r\n                current.forEach((n, i) => {\r\n                    if (d[i] === undefined) {\r\n                        let arr = [n];\r\n                        d[i] = arr;\r\n                    } else {\r\n                        d[i].push(n)\r\n                    }\r\n                })\r\n            }\r\n\r\n            return d.map((nArray, i) => {\r\n                let points = nArray.map((n, j) => (\r\n                    <HeatMapPoint value={n} key={(i + 1) * (j + 1)}/>\r\n                ));\r\n                return {\r\n                    hour: i + 1, points\r\n                }\r\n            });\r\n        }\r\n\r\n        function a() {\r\n            let d = []\r\n            for (const dayOfWeek in data) {\r\n                let current = data[dayOfWeek];\r\n                let preparedData = zipHours(current);\r\n\r\n                let points = preparedData.map((n, i) => (\r\n                    <HeatMapPoint value={n} key={dayOfWeek+i} />\r\n                ))\r\n                d.push({dayOfWeek, points});\r\n            }\r\n            return d;\r\n        }\r\n    }\r\n\r\n    function zipHours(dayOfWeek) {\r\n        let twoHours = [];\r\n        for (let i = 0; i < dayOfWeek.length; i+=2) {\r\n            twoHours.push(dayOfWeek[i] + dayOfWeek[i + 1]);\r\n        }\r\n        return twoHours;\r\n    }\r\n}\r\n\r\nclass HeatMapPoint extends React.Component {\r\n    render() {\r\n        let className;\r\n\r\n        if (this.props.value === 0) className = \"activity-chart__min\";\r\n        if (this.props.value >= 1 && this.props.value <= 2) className = \"activity-chart__mid\";\r\n        if (this.props.value >= 3 && this.props.value <= 4) className = \"activity-chart__max\";\r\n        if (this.props.value >= 5 && this.props.value <= 6) className = \"activity-chart__extra\";\r\n\r\n        return (\r\n            <div className={className} />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {isOrientationPortrait} from \"../helpers\";\r\nimport \"./slide-activity__legend.css\";\r\n\r\nexport default function SlideActivityLegend (props) {\r\n    let oPortrait = isOrientationPortrait(props.orientation);\r\n    let hoursText = oPortrait ? \"1 час\" : \"2 часа\";\r\n    let textsArray = [hoursText, \"0\", \"1 — 2\", \"3 — 4\", \"5 — 6\"];\r\n\r\n    return (\r\n        <div className={\"activity-chart__legend\"}>\r\n            {getList()}\r\n        </div>\r\n    )\r\n\r\n    function getList() {\r\n        return textsArray.map((currText, i) => {\r\n            return (\r\n                    <div className={\"activity-chart__legend-item\"} key={i}>\r\n                        <div className={\"activity-chart__legend-indicator-\"+i} />\r\n                        <div className={\"activity-chart__legend-text\"}>{currText}</div>\r\n                    </div>\r\n            )\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport SlideCaption from \"../components/slide__caption\";\r\nimport ActivityChart from \"../components/activity-chart\";\r\nimport SlideActivityLegend from \"../components/slide-activity__legend\";\r\n\r\nexport default class Activity extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {orientation: window.screen.orientation.type};\r\n    }\r\n\r\n    onOrientationChange = e => {\r\n        this.setState({\r\n            orientation: e.currentTarget.type\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if ('orientation' in window.screen)\r\n            window.screen.orientation.addEventListener(\"change\", this.onOrientationChange)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if ('orientation' in window.screen) {\r\n            window.screen.orientation.removeEventListener(\"change\", this.onOrientationChange );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"slide slide-activity\"}>\r\n                <SlideCaption title={this.props.data.title} subtitle={this.props.data.subtitle}/>\r\n                <ActivityChart data={this.props.data.data} orientation={this.state.orientation} />\r\n                <SlideActivityLegend orientation={this.state.orientation}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import { getScale } from \"../helpers\";\r\nimport React, { useState } from \"react\";\r\nimport \"./slide-vote__users.css\";\r\nimport { isOrientationPortrait } from \"../helpers\";\r\n\r\nlet selectedUserEmoji = \"👍\";\r\n\r\nexport default function SlideVoteUsers (props) {\r\n    let { users, selectedUserId, offset } = props.data;\r\n    let { resolution } = props;\r\n    let isPortrait = isOrientationPortrait(resolution.orientation);\r\n    let scale = getScale(resolution);\r\n    let topBtnActive = false, bottomBtnActive = false;\r\n\r\n    let [state, setState] = useState({});\r\n    let nextPageUserId, prevPageUserId;\r\n\r\n    const handleClickTop = (e) => {\r\n        setState({\r\n            action: \"update\",\r\n            params: {\r\n                alias: \"vote\",\r\n                data: {\r\n                    offset: prevPageUserId\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClickBottom = (e) => {\r\n        setState({\r\n            action: \"update\",\r\n            params: {\r\n                alias: \"vote\",\r\n                data: {\r\n                    offset: nextPageUserId\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={\"slide-vote__users\"}>\r\n            {getUsers(users)}\r\n            <div className={topBtnActive ? \"vote__top-btn_active\" : \"vote__top-btn\"}\r\n                 data-action={state.action || \"\"}\r\n                 data-params={JSON.stringify(state.params) || \"\"}\r\n                 onClick={handleClickTop} />\r\n            <div className={bottomBtnActive ? \"vote__bottom-btn_active\" : \"vote__bottom-btn\"}\r\n                 data-action={state.action || \"\"}\r\n                 data-params={JSON.stringify(state.params) || \"\"}\r\n                 onClick={handleClickBottom} />\r\n        </div>\r\n    )\r\n\r\n    function getUsers(users) {\r\n        let preparedUsers = prepareUsers(users);\r\n\r\n        return preparedUsers.map((user, i) => {\r\n            let e = \"\";\r\n            if (user.id === selectedUserId && i !== 0) e = selectedUserEmoji;\r\n            return (\r\n                <User data={user} index={i+1} scale={scale} emoji={e} key={i} />\r\n            )\r\n        });\r\n    }\r\n\r\n    function prepareUsers(users) {\r\n        let offsetIndex = 0;\r\n        if (offset)\r\n            users.forEach((item, i) => {\r\n                if (item.id === offset) offsetIndex = i;\r\n            });\r\n        let usersCount = isPortrait ? 8 : 6;\r\n\r\n        let preparedUsers = users.slice(offsetIndex, offsetIndex + usersCount);\r\n        let tempUser = users[offsetIndex + usersCount]; // nextPageUser\r\n        nextPageUserId = tempUser ? tempUser.id : 0;\r\n        tempUser = users[offsetIndex - usersCount]; // prevPageUser\r\n        prevPageUserId = tempUser ? tempUser.id : 0;\r\n        if (!prevPageUserId) prevPageUserId = users[0].id;\r\n        if (preparedUsers[0].id === users[0].id) prevPageUserId = 0;\r\n\r\n        if (nextPageUserId) bottomBtnActive = true;\r\n        if (prevPageUserId) topBtnActive = true;\r\n\r\n        if (preparedUsers.length < usersCount)\r\n            for (let i = 0; i < usersCount + 1 - preparedUsers.length; i++) {\r\n                preparedUsers.push({id: \"empty\"})\r\n            }\r\n        return preparedUsers;\r\n    }\r\n}\r\n\r\nclass User extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            action: \"update\",\r\n            params: {\r\n                alias: \"leaders\",\r\n                data: {\r\n                    selectedUserId: this.props.data.id\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let className = \"vote__user\";\r\n        if (this.props.emoji === selectedUserEmoji) {\r\n            className += \"_selected\";\r\n        }\r\n        if (this.props.data.id === \"empty\") {\r\n            return <div className={`vote__user-empty vote__user-${this.props.index}`} />\r\n        }\r\n        return (\r\n            <div className={`${className} vote__user-${this.props.index}`} onClick={this.handleClick}\r\n                 data-action={this.state.action || \"\"}\r\n                 data-params={JSON.stringify(this.state.params) || \"\"}>\r\n                <span className={\"vote__user-emoji\"}>{this.props.emoji}</span>\r\n                <img className={\"vote__user-avatar\"}\r\n                     src={`assets/images/${this.props.scale}x/${this.props.data.avatar}`}\r\n                     alt={this.props.data.name}/>\r\n                <div className={\"vote__user-name\"}>{this.props.data.name}</div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nimport SlideCaption from \"../components/slide__caption\";\r\nimport SlideVoteUsers from \"../components/slide-vote__users\";\r\n\r\nexport default class Vote extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = this.getResolutionObject()\r\n    }\r\n\r\n    onResize = e => {\r\n        this.setState(this.getResolutionObject())\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.onResize);\r\n        window.screen.orientation.addEventListener(\"change\", this.onResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.onResize);\r\n        window.screen.orientation.removeEventListener(\"change\", this.onResize);\r\n    }\r\n\r\n    getResolutionObject() {\r\n        return {\r\n            innerWidth: window.innerWidth,\r\n            innerHeight: window.innerHeight,\r\n            orientation: window.screen.orientation.type\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"slide slide-vote\"}>\r\n                <SlideCaption title={this.props.data.title} subtitle={this.props.data.subtitle} />\r\n                <SlideVoteUsers data={this.props.data} resolution={this.state}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import { getScale } from \"../helpers\";\r\nimport React from \"react\";\r\nimport \"./slide-chart__users.css\";\r\n\r\nexport default function SlideChartUsers (props) {\r\n    let { users } = props;\r\n    let preparedUsers = users.slice(0, 2);\r\n\r\n    return (\r\n        <div className={\"slide-chart__users\"}>\r\n            {getUsers()}\r\n        </div>\r\n    )\r\n\r\n    function getUsers() {\r\n        return preparedUsers.map((user, i) =>\r\n            (\r\n                <div className={\"slide-chart__user\"} key={i}>\r\n                    <img className={\"slide-chart__user-avatar\"}\r\n                         src={`assets/images/${getScale(props.resolution)}x/${user.avatar}`}\r\n                         alt={user.name}/>\r\n                    <div className={\"slide-chart__user-text\"}>\r\n                        <div className={\"slide-chart__user-name\"}>{user.name}</div>\r\n                        <div className={\"slide-chart__user-value\"}>{user.valueText}</div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        )\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { isOrientationPortrait } from \"../helpers\";\r\nimport \"./slide-chart__diagram.css\";\r\n\r\nexport default function SlideChartDiagram (props) {\r\n    let { values } = props;\r\n\r\n    let [preparedValues, max] = prepareData(values);\r\n\r\n    return (\r\n        <div className={\"slide-chart__diagram\"}>\r\n            {getDiagram()}\r\n        </div>\r\n    );\r\n\r\n    function getDiagram() {\r\n        return preparedValues.map((item, i) => {\r\n            let { value, title, active } = item;\r\n            let isWide = value.toString().length > 4 ? \"_wide\" : \"\";\r\n            let isActive = active ? \"_active\" : \"\";\r\n\r\n            return (\r\n                <div className={\"slide-chart__item\" + isWide} key={i}>\r\n                    <div className={\"slide-chart__text-top\" + isActive}>{value || \"\"}</div>\r\n                    <div className={\"slide-chart__column\" + isActive}\r\n                         style={{height: `calc(${value / max} * var(--max-column-height))`}}/>\r\n                    <div className={\"slide-chart__text-bottom\"}>{title}</div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    function prepareData(values) {\r\n        let valuesCount = isOrientationPortrait(props.resolution.orientation) ? 6 : 9;\r\n        let activeValueIndex;\r\n        values.forEach((item, i) => {\r\n            if (item.active) activeValueIndex = i;\r\n        })\r\n        if (!activeValueIndex) return;\r\n        let preparedValues = values.slice(activeValueIndex - valuesCount + 3, activeValueIndex + 3);\r\n        let max = preparedValues[0].value;\r\n        for (const item of preparedValues) {\r\n            if (item.value > max) max = item.value;\r\n        }\r\n        return [preparedValues, max];\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport SlideCaption from \"../components/slide__caption\";\r\nimport SlideChartUsers from \"../components/slide-chart__users\";\r\nimport SlideChartDiagram from \"../components/slide-chart__diagram\";\r\n\r\nexport default class Chart extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = this.getResolutionObject()\r\n    }\r\n\r\n    onResize = e => {\r\n        this.setState(this.getResolutionObject())\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.onResize);\r\n        window.screen.orientation.addEventListener(\"change\", this.onResize);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.onResize);\r\n        window.screen.orientation.removeEventListener(\"change\", this.onResize);\r\n    }\r\n\r\n    getResolutionObject() {\r\n        return {\r\n            innerWidth: window.innerWidth,\r\n            innerHeight: window.innerHeight,\r\n            orientation: window.screen.orientation.type\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={\"slide slide-vote\"}>\r\n                <SlideCaption title={this.props.data.title} subtitle={this.props.data.subtitle} />\r\n                <SlideChartDiagram values={this.props.data.values} resolution={this.state}/>\r\n                <SlideChartUsers users={this.props.data.users} resolution={this.state}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport ReactDOM from \"react-dom\";\r\nimport './fonts/fonts.css';\r\nimport './index.css';\r\nimport { addEventListeners } from \"./helpers\";\r\n\r\nimport Leaders from './slides/leaders';\r\nimport Diagram from \"./slides/diagram\";\r\nimport Activity from \"./slides/activity\";\r\nimport Vote from \"./slides/vote\";\r\nimport Chart from \"./slides/chart\";\r\n\r\nconst fetchSlideData = async () => {\r\n    return await fetch('./data.json').then(response => response.json());\r\n};\r\n\r\nfetchSlideData()\r\n    .then(r => {\r\n        window.allSlidesData = r;\r\n        const { slideNumber, theme } = getUrlParameters();\r\n        const slideData = r[slideNumber - 1];\r\n        window.currSlide = parseInt(slideNumber);\r\n        window.currTheme = theme;\r\n\r\n        setTheme(theme, window.root);\r\n\r\n        if (slideData) {\r\n            const { alias, data } = slideData;\r\n            renderTemplate(alias, data);\r\n        }\r\n    })\r\n    .then(() => {\r\n        addEventListeners();\r\n    })\r\n\r\nconst renderTemplate = (alias, data) => {\r\n    let slideComponent;\r\n\r\n    switch (alias) {\r\n        case \"leaders\":\r\n            slideComponent = <Leaders data={data}/>\r\n            break;\r\n        case \"diagram\":\r\n            slideComponent = <Diagram data={data} />\r\n            break;\r\n        case \"activity\":\r\n            slideComponent = <Activity data={data} />\r\n            break;\r\n        case \"vote\":\r\n            slideComponent = <Vote data={data} />\r\n            break;\r\n        case \"chart\":\r\n            slideComponent = <Chart data={data} />\r\n            break;\r\n        default:\r\n            slideComponent = \"Компонент не найден\";\r\n    }\r\n\r\n    ReactDOM.render(slideComponent, window.root);\r\n    return ReactDOMServer.renderToStaticMarkup(slideComponent);\r\n}\r\n\r\nwindow.renderTemplate = renderTemplate;\r\nwindow.root = document.getElementById(\"stories\");\r\n\r\nexport const getUrlParameters = () => {\r\n    let {searchParams} = new URL(document.location.href);\r\n    let slideNumber = searchParams.get(\"slide\");\r\n    let theme = searchParams.get(\"theme\");\r\n\r\n    slideNumber = slideNumber || 1;\r\n    theme = theme || \"dark\";\r\n\r\n    return { slideNumber, theme }\r\n}\r\n\r\nconst setTheme = (theme, root) => {\r\n    root.classList.remove(\"theme_dark\");\r\n    root.classList.remove(\"theme_light\");\r\n    root.classList.add(\"theme_\" + theme);\r\n}"],"sourceRoot":""}